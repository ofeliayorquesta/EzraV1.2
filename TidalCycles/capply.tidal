{-- Evaluate after starting MIDI receiver in SuperCollider--}
capply condpat effectpat = every
    (fmap (\x -> if x > 0 then 1 else 0)
    (discretise 1 condpat)) (effectpat)

{-- Test MIDI buttons with simple code (Optional)--}
d1 $ capply (cF 0 "20") (const $ s "curac:7*4")
   $ capply (cF  0 "21") (const $ s "curac:5(3,8)")
   $ capply (cF 0 "22") (const $ s "curac:7(4,8)")
   $ capply (cF 0 "23") (const $ s "playday(5,8)")
   $ s "playday(8,8)"

{-- Load sounds and
trigger the patterns using cc's 20,21,22,23 of MIDI pedal. --}

d1 $ capply (cF 0 "20") (const $ every 8 (const $ s "{curac:5  ~ ~ [~ curac:7],  ~  ~ playday:2*2 }"
                                    # speed "[[1 0.5]/2, [~ 1.5 ~ 2]/3]"
                                    # gain "0.7"
                                    # delay "0.25"
                                    # delaytime "0.25"
                                    # delayfeedback "0.35"
                                    # room "0.05" )   $
                                     ( (# delay "0.25") . (# delaytime "0.5") .  (# room "0.25") .  (# delayfeedback "0.5") )
                $ stack[ s "curac:7(3,8)"
                               # speed "[~ 1.5 ~ 2]/3"
                               # room "0.00",
                         every 4 (const $ s "curac:5(7,8)" # gain "0.8") $ s "hh(2,8)" # gain "0.8" # cut 1,
                         s "curac:2*4" # gain "0.8",
                         n (run 16) # s "sultry" # cut 2 # gain 0.5]
                  # speed "[2 1 3 4]/4")
   $ capply (cF  0 "21") (const $ every 8 (const $ s "{curac:5  ~ ~ [~ curac:7],  ~  ~ ~ }"
                                     # speed "[[1 0.5]/2, [~ 1.5 ~ 2]/3]"
                                     # gain "0.7"
                                     # delay "0.25"
                                     # delaytime "0.5"
                                     # delayfeedback "0.5"
                                     # room "0.5" )   $  whenmod 16 11
                                     ( (# delay "0.25") . (# delaytime "0.75") .  (# room "0.25") .  (# delayfeedback "0.5") )
                 $ stack[ s "curac:7(2,8)"
                             # gain "0.9"
                             # speed "[~ 1.5 ~ 2]/3"
                             # room "0.13",
                          every 4 (const $ s "curac:5(5 ,8)")
                                         $ s "curac:4(3,8)",
                          s "curac:2*2" # gain "0.5",
                          n (run 16) # s "sultry" # cut 2 # gain 0.6]
                   # speed "[2 1 3 4]/4")
   $ capply (cF 0 "22") (const $ every 8 (const $ s "{curac:5*4  ~ ~ [~ curac:7],  ~  ~ playday:2*2 }"
                             # speed "[[1 0.5]/2, [~ 1.5 ~ 2]/3]"
                             # gain "0.7"
                             # delay "0.25"
                             # delaytime "0.5"
                             # delayfeedback "0.5"
                             # room "0.5" ) $
                                 ( (# delay "0.25") . (# delaytime "0.75") .  (# room "0.15") .  (# delayfeedback "0.5") )
                 $ stack[ s "[curac:7(3,8)]*2"
                             # speed "[~ 1.5 ~ 2]/3"
                             # room "0.13",
                          every 4 (const $ s "[curac:5(2 ,8)]*2") $
                            s "curac:4(5,8)",
                          s "curac:2" # gain "0.5"]
                  # speed "[2 1 3 4]/4")
   $ capply (cF 0 "23") (const $ every 8 (const $ every 5 (within (0.25, 0.75) (rev . slow 2 . stut 16 0.4 0.25))
                           $ s "{curac:5  ~ ~ [~ curac:7]*6,  ~  ~ playday:2*4 }"
                                      # speed "[[1 0.5]/2, [~ 1.5 ~ 2]/3]"
                                      # gain "1"
                                      # delay "0.25"
                                      # delaytime "0.75"
                                      # delayfeedback "0.5"
                                      # room "0.5" )   $ every 3
                                       ( (# delay "0.25") . (# delaytime "0.75") .  (# room "0.05") .  (# delayfeedback "0.5") )
                $ stack[ s "[curac:7(3,8)]*4"
                         # gain "0.9"
                         # speed "[~ 1.5 ~ 2]/3"
                         # room "0.03",
                         every 4 (const $ s "curac:5(3 ,8)") $ s "curac:4(5,8)",
                         s "curac:2*4"]
                 # speed "[2 1 3 4]/4")
   $ s "playday:0(3,8)" # speed "[2 1 3 4]/4"
